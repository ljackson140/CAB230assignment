{"ast":null,"code":"export function Registration() {\n  const url = \"http://131.181.190.87:3000/user/register\";\n\n  if (password) {\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: innerEmail,\n        password: password\n      })\n    }).then(res => {\n      if (!res.ok) {\n        setErrorCode(res.status);\n        setError(true);\n        setInnerEmail('');\n        setPassword('');\n      } else {\n        setError(false);\n        setAccepted(true);\n      }\n    }).catch(e => {});\n  } else {\n    setError(true);\n    setErrorCode(400);\n    setInnerEmail('');\n    setPassword('');\n  }\n}\n_c = Registration;\nexport function loginCall() {\n  const url = \"http://131.181.190.87:3000/user/login\";\n  localStorage.setItem('token', 'clear');\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  }).then(res => res.json()).then(res => {\n    if (!res.error) {\n      setError(false);\n      localStorage.setItem('token', res.token);\n      setVerified(localStorage.getItem('token'));\n    } else {\n      setError(true);\n      setEmail('');\n      setPassword('');\n    }\n  });\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/lakujackson/Desktop/CAB230assignment/src/components/user.jsx"],"names":["Registration","url","password","fetch","method","headers","accept","body","JSON","stringify","email","innerEmail","then","res","ok","setErrorCode","status","setError","setInnerEmail","setPassword","setAccepted","catch","e","loginCall","localStorage","setItem","json","error","token","setVerified","getItem","setEmail"],"mappings":"AAGA,OAAO,SAASA,YAAT,GAAwB;AAC3B,QAAMC,GAAG,GAAG,0CAAZ;;AACA,MAAIC,QAAJ,EAAc;AACV,WAAOC,KAAK,CAACF,GAAD,EAAM;AACdG,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,MAAM,EAAE,kBAAV;AAA8B,wBAAgB;AAA9C,OAFK;AAGdC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAEC,UAAT;AAAqBT,QAAAA,QAAQ,EAAEA;AAA/B,OAAf;AAHQ,KAAN,CAAL,CAKFU,IALE,CAKIC,GAAD,IAAS;AACX,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACTC,QAAAA,YAAY,CAACF,GAAG,CAACG,MAAL,CAAZ;AACAC,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAC,QAAAA,aAAa,CAAC,EAAD,CAAb;AACAC,QAAAA,WAAW,CAAC,EAAD,CAAX;AACH,OALD,MAMK;AACDF,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACAG,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ,KAhBE,EAiBFC,KAjBE,CAiBKC,CAAD,IAAO,CACb,CAlBE,CAAP;AAmBH,GApBD,MAqBK;AACDL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,IAAAA,YAAY,CAAC,GAAD,CAAZ;AACAG,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH;AACJ;KA7BenB,Y;AA+BhB,OAAO,SAASuB,SAAT,GAAqB;AACxB,QAAMtB,GAAG,GAAG,uCAAZ;AACAuB,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,OAA9B;AACA,SAAOtB,KAAK,CAACF,GAAD,EAAM;AACdG,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAE,kBAAV;AAA8B,sBAAgB;AAA9C,KAFK;AAGdC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBR,MAAAA,QAAQ,EAAEA;AAA1B,KAAf;AAHQ,GAAN,CAAL,CAKFU,IALE,CAKIC,GAAD,IAASA,GAAG,CAACa,IAAJ,EALZ,EAMFd,IANE,CAMIC,GAAD,IAAS;AACX,QAAI,CAACA,GAAG,CAACc,KAAT,EAAgB;AACZV,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAO,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BZ,GAAG,CAACe,KAAlC;AACAC,MAAAA,WAAW,CAACL,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAD,CAAX;AACH,KAJD,MAKK;AACDb,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAc,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAZ,MAAAA,WAAW,CAAC,EAAD,CAAX;AACH;AACJ,GAjBE,CAAP;AAkBH","sourcesContent":["\n\n\nexport function Registration() {\n    const url = \"http://131.181.190.87:3000/user/register\"\n    if (password) {\n        return fetch(url, {\n            method: \"POST\",\n            headers: { accept: \"application/json\", \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ email: innerEmail, password: password })\n        })\n            .then((res) => {\n                if (!res.ok) {\n                    setErrorCode(res.status)\n                    setError(true);\n                    setInnerEmail('');\n                    setPassword('');\n                }\n                else {\n                    setError(false);\n                    setAccepted(true);\n                }\n            })\n            .catch((e) => {\n            })\n    }\n    else {\n        setError(true);\n        setErrorCode(400)\n        setInnerEmail('');\n        setPassword('');\n    }\n}\n\nexport function loginCall() {\n    const url = \"http://131.181.190.87:3000/user/login\"\n    localStorage.setItem('token', 'clear');\n    return fetch(url, {\n        method: \"POST\",\n        headers: { accept: \"application/json\", \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email: email, password: password })\n    })\n        .then((res) => res.json())\n        .then((res) => {\n            if (!res.error) {\n                setError(false);\n                localStorage.setItem('token', res.token);\n                setVerified(localStorage.getItem('token'))\n            }\n            else {\n                setError(true);\n                setEmail('');\n                setPassword('');\n            }\n        })\n}"]},"metadata":{},"sourceType":"module"}