{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\llaku\\\\Desktop\\\\Uni Subjects\\\\2021\\\\CAB230\\\\CAB230assignment\\\\src\\\\components\\\\rankings.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from 'reactstrap';\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine-dark.css\";\nimport \"./ranking.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst years = [{\n  title: \"2015\",\n  link: \"?year=2015\"\n}, {\n  title: \"2016\",\n  link: \"?year=2016\"\n}, {\n  title: \"2017\",\n  link: \"?year=2017\"\n}, {\n  title: \"2018\",\n  link: \"?year=2018\"\n}, {\n  title: \"2019\",\n  link: \"?year=2019\"\n}, {\n  title: \"2020\",\n  link: \"?year=2020\"\n}, {\n  title: \"2021\",\n  link: \"?year=2021\"\n}];\n\nfunction Rankings() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [rowData, setRowData] = useState([]);\n  const [selected, setSelected] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://131.181.190.87:3000/rankings\" + year).then(res => res.json()).then(data => data.map(company => {\n      return {\n        rank: company.rank,\n        country: company.country,\n        score: company.score,\n        year: company.year\n      };\n    })).then(senData => setRowData(senData));\n  }, [year]);\n\n  function clickHander(props) {\n    setSelected(props.data.year);\n  }\n\n  function setYearFunc() {\n    setYear(this.link);\n  }\n\n  function Dropdownmenu() {\n    _s();\n\n    const [openDropDown, setOpenDropDown] = useState(false);\n\n    const toggle = () => setOpenDropDown(prevState => !prevState);\n\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      isOpen: openDropDown,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n        caret: true,\n        children: \"Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n        className: \"years-drop\",\n        children: years.map(data => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(DropdownItem, {\n            onClick: setYearFunc.bind(data),\n            children: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)\n        }, data.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s(Dropdownmenu, \"8bQ/UGSRBl2oRUCTsFUtyp99rRc=\");\n\n  const columns = [{\n    headerName: \"Rank\",\n    field: \"rank\",\n    filter: \"agTextColumnFilter\",\n    filter: true,\n    sortable: true,\n    width: \"200\",\n    flex: \"300\"\n  }, {\n    headerName: \"Country\",\n    field: \"country\",\n    filter: \"agTextColumnFilter\",\n    filter: true,\n    sortable: true,\n    width: \"200\",\n    flex: \"300\"\n  }, {\n    headerName: \"Score\",\n    field: \"score\",\n    filter: \"agTextColumnFilter\",\n    filter: true,\n    sortable: true,\n    width: \"200\",\n    flex: \"300\"\n  }, {\n    headerName: \"Year\",\n    field: \"year\",\n    filter: \"agTextColumnFilter\",\n    filter: true,\n    sortable: true,\n    width: \"200\",\n    flex: \"300\"\n  }];\n\n  function Table() {\n    return /*#__PURE__*/_jsxDEV(AgGridReact, {\n      columnDefs: columns,\n      rowData: rowData,\n      onRowDoubleClicked: clickHander,\n      pagination: true,\n      paginationPageSize: 30,\n      rowSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jumbo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tBox-message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Rankings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ag-theme-alpine-dark table\",\n        style: {\n          height: \"60vh\",\n          width: \"60vw\",\n          marginRight: \"6%\",\n          marginLeft: \"6%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"years-drop\",\n          children: /*#__PURE__*/_jsxDEV(Dropdownmenu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Rankings, \"lS7Jx0slzcSzEBhwKGfQ4QCFJTE=\");\n\n_c = Rankings;\nexport default Rankings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rankings\");","map":{"version":3,"sources":["C:/Users/llaku/Desktop/Uni Subjects/2021/CAB230/CAB230assignment/src/components/rankings.jsx"],"names":["React","useState","useEffect","AgGridReact","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Button","years","title","link","Rankings","rowData","setRowData","selected","setSelected","year","setYear","fetch","then","res","json","data","map","company","rank","country","score","senData","clickHander","props","setYearFunc","Dropdownmenu","openDropDown","setOpenDropDown","toggle","prevState","bind","columns","headerName","field","filter","sortable","width","flex","Table","height","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from 'reactstrap';\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine-dark.css\";\r\nimport \"./ranking.css\";\r\n\r\n\r\nconst years = [\r\n    {title: \"2015\", link: \"?year=2015\"},\r\n    {title: \"2016\", link: \"?year=2016\"},\r\n    {title: \"2017\", link: \"?year=2017\"},\r\n    {title: \"2018\", link: \"?year=2018\"},\r\n    {title: \"2019\", link: \"?year=2019\"},\r\n    {title: \"2020\", link: \"?year=2020\"},\r\n    {title: \"2021\", link: \"?year=2021\"},\r\n]\r\n\r\nfunction Rankings() {\r\n    \r\n    const [rowData, setRowData] = useState([]);\r\n    const [selected, setSelected] = useState(\"\");\r\n    const [year, setYear] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://131.181.190.87:3000/rankings\" + year)\r\n            .then(res => res.json())\r\n            .then(data =>\r\n                data.map(company => {\r\n                    return {\r\n                        rank: company.rank,\r\n                        country: company.country,\r\n                        score: company.score,\r\n                        year: company.year,\r\n                    };\r\n                })\r\n            )\r\n            .then(senData => setRowData(senData));\r\n    }, [year]);\r\n\r\n    function clickHander(props) {\r\n        setSelected(props.data.year);\r\n    }\r\n    function setYearFunc() {\r\n        setYear(this.link);\r\n    }\r\n\r\n    function Dropdownmenu(){\r\n        const [openDropDown, setOpenDropDown] = useState(false);\r\n        const toggle = () => setOpenDropDown(prevState => !prevState);\r\n\r\n        return (\r\n            <Dropdown isOpen={openDropDown} toggle={toggle}>\r\n                <DropdownToggle caret>\r\n                    Year\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"years-drop\">\r\n                    {years.map(data => (\r\n                        <React.Fragment key={data.title}>\r\n                            <DropdownItem onClick={setYearFunc.bind(data)}>{data.title}</DropdownItem>\r\n                        </React.Fragment>\r\n                    ))}\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        )\r\n    }\r\n\r\n    const columns = [\r\n        { headerName: \"Rank\", field: \"rank\", filter: \"agTextColumnFilter\", filter: true, sortable: true, width:\"200\", flex:\"300\" },\r\n        { headerName: \"Country\", field: \"country\", filter: \"agTextColumnFilter\", filter: true, sortable: true, width:\"200\", flex:\"300\" },\r\n        { headerName: \"Score\", field: \"score\", filter: \"agTextColumnFilter\", filter: true, sortable: true, width:\"200\", flex:\"300\" },\r\n        { headerName: \"Year\", field: \"year\", filter: \"agTextColumnFilter\", filter: true, sortable: true, width:\"200\", flex:\"300\" }\r\n    ];\r\n\r\n    function Table(){\r\n        return (\r\n\r\n            <AgGridReact\r\n                columnDefs={columns}\r\n                rowData={rowData}\r\n                onRowDoubleClicked={clickHander}\r\n                pagination={true}\r\n                paginationPageSize={30}\r\n                rowSelection={true}\r\n            >\r\n            </AgGridReact>\r\n        );\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"jumbo\">\r\n                \r\n                <div className=\"tBox-message\">\r\n                        <div className=\"title\">\r\n                            Rankings\r\n                        </div>\r\n                </div>\r\n                \r\n                <div\r\n                    className=\"ag-theme-alpine-dark table\"\r\n                    style={{\r\n                    height: \"60vh\",\r\n                    width: \"60vw\",\r\n                    marginRight: \"6%\",\r\n                    marginLeft : \"6%\"\r\n                    }}\r\n                    >\r\n                    <div className=\"years-drop\">\r\n                        <Dropdownmenu />\r\n                    </div>\r\n                    <Table />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Rankings;\r\n\r\n \r\n"]},"metadata":{},"sourceType":"module"}