{"ast":null,"code":"var _jsxFileName = \"/home/lakujackson/Desktop/CAB230assignment/src/components/login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport NavBar from './navbar';\nimport { Redirect } from \"react-router-dom\";\nimport \"./styles/homee.css\";\nimport \"./styles/login.css\";\nimport { Error } from './error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  //error\n  const [error, setError] = useState(false); //credentials\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState(''); //verification\n\n  const [verified, setVerified] = useState('clear'); //call to API\n\n  function loginCall() {\n    const url = \"http://131.181.190.87:3000/user/login\";\n    localStorage.setItem('token', 'clear');\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(res => res.json()).then(res => {\n      if (!res.error) {\n        setError(false);\n        localStorage.setItem('token', res.token);\n        setVerified(localStorage.getItem('token'));\n      } else {\n        setError(true);\n        setEmail('');\n        setPassword('');\n      }\n    });\n  }\n\n  if (verified === 'clear') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tMessage\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userLoginDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Error, {\n              error: error,\n              type: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"email-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"name\",\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"email\",\n                id: \"email\",\n                type: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"pass\",\n                children: \"Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"pass\",\n                id: \"pass\",\n                type: \"pass\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"sButton\",\n              type: \"button\",\n              onClick: () => {\n                loginCall();\n              },\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  } else if (!error & verified !== 'clear') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Login, \"ZOYdVgKeyjxoP37e0de81eULVrs=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/lakujackson/Desktop/CAB230assignment/src/components/login.jsx"],"names":["React","useState","NavBar","Redirect","Error","Login","error","setError","email","setEmail","password","setPassword","verified","setVerified","loginCall","url","localStorage","setItem","fetch","method","headers","accept","body","JSON","stringify","then","res","json","token","getItem","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport NavBar from './navbar';\nimport { Redirect } from \"react-router-dom\";\nimport \"./styles/homee.css\";\nimport \"./styles/login.css\";\nimport { Error } from './error';\n\nexport default function Login() {\n\n    //error\n    const [error, setError] = useState(false);\n\n    //credentials\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n    //verification\n    const [verified, setVerified] = useState('clear');\n\n    //call to API\n    function loginCall() {\n        const url = \"http://131.181.190.87:3000/user/login\"\n        localStorage.setItem('token', 'clear');\n        return fetch(url, {\n            method: \"POST\",\n            headers: { accept: \"application/json\", \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ email: email, password: password })\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                if (!res.error) {\n                    setError(false);\n                    localStorage.setItem('token', res.token);\n                    setVerified(localStorage.getItem('token'))\n                }\n                else {\n                    setError(true);\n                    setEmail('');\n                    setPassword('');\n                }\n            })\n    }\n\n    if (verified === 'clear') {\n        return (\n            <div>\n                <div className=\"headDiv\">\n                    \n                    <div className=\"tMessage\">                          \n                        <h1>Login</h1> \n                    </div>\n                    \n                    <div className=\"userLoginDiv\">\n                        <div>\n                            <Error error={error} type=\"Login\" />\n                                <div className=\"email-form\">\n                                    <label for=\"name\">Email:</label>\n                                    <input \n                                        name=\"email\"\n                                        id=\"email\"\n                                        type=\"email\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n                                \n                                <div className=\"password-form\">\n                                    <label for=\"pass\">Password:</label>\n                                    <input\n                                        name=\"pass\"\n                                        id=\"pass\"\n                                        type=\"pass\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                </div>\n                                <button\n                                    id=\"sButton\"\n                                    type=\"button\"\n                                    onClick={() => { loginCall() }}\n                                >\n                                    Login\n                                </button>\n                            </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    else if (!error & verified !== 'clear') {\n        return (\n            <div>\n                <NavBar />\n                <Redirect to=\"/home\" />\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}