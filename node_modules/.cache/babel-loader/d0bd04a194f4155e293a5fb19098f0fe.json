{"ast":null,"code":"var _jsxFileName = \"/home/lakujackson/Desktop/CAB230assignment/src/components/rankings.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine-dark.css\";\nimport \"./ranking.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst years = [{\n  title: \"2015\",\n  link: \"?year=2015\"\n}, {\n  title: \"2016\",\n  link: \"?year=2016\"\n}, {\n  title: \"2017\",\n  link: \"?year=2017\"\n}, {\n  title: \"2018\",\n  link: \"?year=2018\"\n}, {\n  title: \"2019\",\n  link: \"?year=2019\"\n}, {\n  title: \"2020\",\n  link: \"?year=2020\"\n}, {\n  title: \"2021\",\n  link: \"?year=2021\"\n}];\n\nfunction Rankings() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [rowData, setRowData] = useState([]);\n  const [selected, setSelected] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://131.181.190.87:3000/rankings\" + year).then(res => res.json()).then(data => data.map(company => {\n      return {\n        rank: company.rank,\n        country: company.country,\n        score: company.score,\n        year: company.year\n      };\n    })).then(senData => setRowData(senData));\n  }, [year]);\n\n  function setYearFunc() {\n    setYear(this.link);\n  }\n\n  function Dropdownmenu() {\n    _s();\n\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n\n    const toggle = () => setDropdownOpen(prevState => !prevState);\n\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      isOpen: dropdownOpen,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n        caret: true,\n        children: \"Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n        className: \"industry-drop\",\n        children: years.map(data => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(DropdownItem, {\n            onClick: setYearFunc.bind(data),\n            children: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)\n        }, data.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s(Dropdownmenu, \"z5Nkh6K+y+CV4vT0AOyJ2ID9tJg=\");\n\n  function clickHander(props) {\n    setSelected(props.data.year);\n  }\n\n  const columns = [{\n    headerName: \"Rank\",\n    field: \"rank\",\n    filter: \"agTextColumnFilter\",\n    filter: true,\n    sortable: true,\n    width: \"200\",\n    flex: \"300\"\n  }, {\n    headerName: \"Country\",\n    field: \"country\",\n    filter: \"agTextColumnFilter\",\n    filter: true,\n    sortable: true,\n    width: \"200\",\n    flex: \"300\"\n  }, {\n    headerName: \"Score\",\n    field: \"score\",\n    filter: \"agTextColumnFilter\",\n    filter: true,\n    sortable: true,\n    width: \"200\",\n    flex: \"300\"\n  }, {\n    headerName: \"Year\",\n    field: \"year\",\n    filter: \"agTextColumnFilter\",\n    filter: true,\n    sortable: true,\n    width: \"200\",\n    flex: \"300\"\n  }];\n\n  function Table() {\n    return /*#__PURE__*/_jsxDEV(AgGridReact, {\n      columnDefs: columns,\n      rowData: rowData,\n      pagination: true,\n      paginationPageSize: 30,\n      rowSelection: true,\n      onRowDoubleClicked: clickHander\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (selected === \"\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jumbo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transbox\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transMessage\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: \"Rankings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ag-theme-alpine-dark table\",\n          style: {\n            height: \"60vh\",\n            width: \"60vw\",\n            marginRight: \"5%\",\n            marginLeft: \"5%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"industry-drop\",\n            children: /*#__PURE__*/_jsxDEV(Dropdownmenu, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"./search\" + selected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s2(Rankings, \"lS7Jx0slzcSzEBhwKGfQ4QCFJTE=\");\n\n_c = Rankings;\nexport default Rankings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rankings\");","map":{"version":3,"sources":["/home/lakujackson/Desktop/CAB230assignment/src/components/rankings.jsx"],"names":["React","useState","useEffect","AgGridReact","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Button","Redirect","years","title","link","Rankings","rowData","setRowData","selected","setSelected","year","setYear","fetch","then","res","json","data","map","company","rank","country","score","senData","setYearFunc","Dropdownmenu","dropdownOpen","setDropdownOpen","toggle","prevState","bind","clickHander","props","columns","headerName","field","filter","sortable","width","flex","Table","height","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine-dark.css\";\nimport \"./ranking.css\";\n\n\nconst years = [\n    {title: \"2015\", link: \"?year=2015\"},\n    {title: \"2016\", link: \"?year=2016\"},\n    {title: \"2017\", link: \"?year=2017\"},\n    {title: \"2018\", link: \"?year=2018\"},\n    {title: \"2019\", link: \"?year=2019\"},\n    {title: \"2020\", link: \"?year=2020\"},\n    {title: \"2021\", link: \"?year=2021\"},\n]\n\nfunction Rankings() {\n    \n    const [rowData, setRowData] = useState([]);\n    const [selected, setSelected] = useState(\"\");\n    const [year, setYear] = useState(\"\");\n\n    useEffect(() => {\n        fetch(\"http://131.181.190.87:3000/rankings\" + year)\n            .then(res => res.json())\n            .then(data =>\n                data.map(company => {\n                    return {\n                        rank: company.rank,\n                        country: company.country,\n                        score: company.score,\n                        year: company.year,\n                    };\n                })\n            )\n            .then(senData => setRowData(senData));\n    }, [year]);\n\n    function setYearFunc() {\n        setYear(this.link);\n    }\n\n    function Dropdownmenu(){\n        const [dropdownOpen, setDropdownOpen] = useState(false);\n        const toggle = () => setDropdownOpen(prevState => !prevState);\n\n        return (\n            <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                <DropdownToggle caret>\n                    Year\n                </DropdownToggle>\n                <DropdownMenu className=\"industry-drop\">\n                    {years.map(data => (\n                        <React.Fragment key={data.title}>\n                            <DropdownItem onClick={setYearFunc.bind(data)}>{data.title}</DropdownItem>\n                        </React.Fragment>\n                    ))}\n                </DropdownMenu>\n            </Dropdown>\n        )\n    }\n\n    function clickHander(props) {\n        setSelected(props.data.year);\n    }\n\n    const columns = [\n        { headerName: \"Rank\", field: \"rank\", filter: \"agTextColumnFilter\", filter: true, sortable: true, width:\"200\", flex:\"300\" },\n        { headerName: \"Country\", field: \"country\", filter: \"agTextColumnFilter\", filter: true, sortable: true, width:\"200\", flex:\"300\" },\n        { headerName: \"Score\", field: \"score\", filter: \"agTextColumnFilter\", filter: true, sortable: true, width:\"200\", flex:\"300\" },\n        { headerName: \"Year\", field: \"year\", filter: \"agTextColumnFilter\", filter: true, sortable: true, width:\"200\", flex:\"300\" }\n      ];\n\n    function Table(){\n        return (\n\n            <AgGridReact\n                columnDefs={columns}\n                rowData={rowData}\n                pagination={true}\n                paginationPageSize={30}\n                rowSelection={true}\n                onRowDoubleClicked={clickHander}\n            >\n            </AgGridReact>\n        );\n    }\n\n    if (selected === \"\") {\n        return (\n            <div>\n                <div className=\"jumbo\">\n                    <div className=\"transbox\">\n                        <div className=\"transMessage\">\n                                <div className=\"title\">\n                                    Rankings\n                                </div>\n                        </div>\n                    </div>\n                    <div\n                        className=\"ag-theme-alpine-dark table\"\n                        style={{\n                        height: \"60vh\",\n                        width: \"60vw\",\n                        marginRight: \"5%\",\n                        marginLeft : \"5%\"\n                        }}\n                        >\n                        <div className=\"industry-drop\">\n                            <Dropdownmenu />\n                        </div>\n                        <Table />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    else {\n        return(\n            <Redirect to={\"./search\" + selected} />\n        )\n    }\n\n\n\n   \n}\n\nexport default Rankings;\n\n \n"]},"metadata":{},"sourceType":"module"}