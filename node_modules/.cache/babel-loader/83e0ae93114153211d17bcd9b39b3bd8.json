{"ast":null,"code":"var _jsxFileName = \"/home/lakujackson/Desktop/CAB230assignment/src/components/search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Autosuggest from \"react-autosuggest\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport 'ag-grid-enterprise';\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine-dark.css\";\nimport \"./styles/search.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  const [rowData, setRowData] = useState([]);\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  useEffect(() => {\n    fetch(\"http://131.181.190.87:3000/rankings\").then(res => res.json()).then(data => data.map(searchData => {\n      return {\n        year: searchData.year,\n        rank: searchData.rank,\n        score: searchData.score,\n        country: searchData.country\n      };\n    })).then(senData => setRowData(senData));\n  }, []);\n  const columns = [{\n    headerName: \"Year\",\n    field: \"year\",\n    sortable: true,\n    filter: true\n  }, {\n    headerName: \"Rank\",\n    field: \"rank\",\n    sortable: true,\n    filter: true\n  }, {\n    headerName: \"Score\",\n    field: \"score\",\n    sortable: true,\n    filter: true\n  }, {\n    headerName: \"Country\",\n    field: \"country\",\n    sortable: true,\n    filter: true\n  }];\n\n  function onGridReady(p) {\n    setGridApi(p.api);\n    setGridColumnApi(p.columnApi);\n  }\n\n  const onFilterTextChange = e => {\n    gridApi.setQuickFilter(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Happiness Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"search for your country's Happiness\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        onChange: onFilterTextChange,\n        placeholder: \"search a country...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-alpine-dark table\",\n      style: {\n        height: 300\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        onGridReady: onGridReady,\n        rowData: rowData,\n        columnDefs: columns,\n        defaultColDef: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"pbeGH7C+ygnPLb4Co4UuujO61VE=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/lakujackson/Desktop/CAB230assignment/src/components/search.jsx"],"names":["React","useState","useEffect","Autosuggest","AgGridReact","Search","rowData","setRowData","gridApi","setGridApi","gridColumnApi","setGridColumnApi","fetch","then","res","json","data","map","searchData","year","rank","score","country","senData","columns","headerName","field","sortable","filter","onGridReady","p","api","columnApi","onFilterTextChange","e","setQuickFilter","target","value","height","flex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Autosuggest from \"react-autosuggest\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport 'ag-grid-enterprise';\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine-dark.css\";\nimport \"./styles/search.css\";\n\n\n\nfunction Search(){\n\n    const [rowData, setRowData] = useState([]);\n    const [gridApi, setGridApi] = useState(null);\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n\n    useEffect(() => {\n        fetch(\"http://131.181.190.87:3000/rankings\")\n            .then(res => res.json())\n            .then(data =>\n                data.map(searchData => {\n                    return {\n                        year: searchData.year,\n                        rank: searchData.rank,\n                        score: searchData.score,\n                        country: searchData.country,\n                    };\n                })\n            )\n            .then(senData => setRowData(senData));\n    }, []);\n\n    const columns = [\n        { headerName: \"Year\", field: \"year\", sortable: true, filter: true },\n        { headerName: \"Rank\", field: \"rank\", sortable: true, filter: true },\n        { headerName: \"Score\", field: \"score\", sortable: true, filter: true },\n        { headerName: \"Country\", field: \"country\", sortable: true, filter: true },\n    ];\n\n    \n\n    function onGridReady(p) {\n        setGridApi(p.api);\n        setGridColumnApi(p.columnApi);\n      }\n    const onFilterTextChange=(e)=>{\n      gridApi.setQuickFilter(e.target.value)\n    }\n\n    return (\n        <div className=\"App\">\n          <div className=\"search-title\">\n            <h1>Happiness Search</h1>\n            <h4>search for your country's Happiness</h4>\n          </div>\n          \n          <div>\n            <input \n                type=\"search\" \n                onChange={onFilterTextChange} \n                placeholder=\"search a country...\"/>\n          </div>\n          <div className=\"ag-theme-alpine-dark table\" style={{ height: 300 }}>\n            <AgGridReact\n              onGridReady={onGridReady}\n              rowData={rowData}\n              columnDefs={columns}\n              defaultColDef={{ flex: 1 }}\n            />\n          </div>\n        </div>\n      );\n\n\n    \n    \n}\n \nexport default Search;"]},"metadata":{},"sourceType":"module"}