{"ast":null,"code":"var _jsxFileName = \"/home/lakujackson/Desktop/CAB230assignment/src/components/search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Badge, Input } from \"reactstrap\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  const [rowData, setRowData] = useState([]);\n  useEffect(() => {\n    fetch(\"http://131.181.190.87:3000/rankings\").then(res => res.json()).then(data => data.map(company => {\n      return {\n        year: company.year,\n        rank: company.rank,\n        score: company.score,\n        country: company.country\n      };\n    })).then(senData => setRowData(senData));\n  }, []);\n  const columns = [{\n    headerName: \"Year\",\n    field: \"year\",\n    sortable: true,\n    filter: true\n  }, {\n    headerName: \"Rank\",\n    field: \"rank\",\n    sortable: true\n  }, {\n    headerName: \"Score\",\n    field: \"score\",\n    sortable: true\n  }, {\n    headerName: \"Country\",\n    field: \"country\",\n    sortable: true\n  }];\n\n  function Table() {\n    return /*#__PURE__*/_jsxDEV(AgGridReact, {\n      columnDefs: columns,\n      rowData: rowData,\n      pagination: true,\n      paginationPageSize: 30,\n      rowSelection: true,\n      onRowDoubleClicked: clickHander\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Search, \"xN2bMZkjhWQ3a2zx1ObaCbGfPzo=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/lakujackson/Desktop/CAB230assignment/src/components/search.jsx"],"names":["React","useState","useEffect","Button","Badge","Input","AgGridReact","Search","rowData","setRowData","fetch","then","res","json","data","map","company","year","rank","score","country","senData","columns","headerName","field","sortable","filter","Table","clickHander"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,QAAqC,YAArC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,2CAAP;AACA,OAAO,mDAAP;;;AAGA,SAASC,MAAT,GAAiB;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IACNA,IAAI,CAACC,GAAL,CAASC,OAAO,IAAI;AAChB,aAAO;AACHC,QAAAA,IAAI,EAAED,OAAO,CAACC,IADX;AAEHC,QAAAA,IAAI,EAAEF,OAAO,CAACE,IAFX;AAGHC,QAAAA,KAAK,EAAEH,OAAO,CAACG,KAHZ;AAIHC,QAAAA,OAAO,EAAEJ,OAAO,CAACI;AAJd,OAAP;AAMH,KAPD,CAHR,EAYKT,IAZL,CAYUU,OAAO,IAAIZ,UAAU,CAACY,OAAD,CAZ/B;AAaH,GAdQ,EAcN,EAdM,CAAT;AAgBA,QAAMC,OAAO,GAAG,CACZ;AAAEC,IAAAA,UAAU,EAAE,MAAd;AAAsBC,IAAAA,KAAK,EAAE,MAA7B;AAAqCC,IAAAA,QAAQ,EAAE,IAA/C;AAAqDC,IAAAA,MAAM,EAAE;AAA7D,GADY,EAEZ;AAAEH,IAAAA,UAAU,EAAE,MAAd;AAAsBC,IAAAA,KAAK,EAAE,MAA7B;AAAqCC,IAAAA,QAAQ,EAAE;AAA/C,GAFY,EAGZ;AAAEF,IAAAA,UAAU,EAAE,OAAd;AAAuBC,IAAAA,KAAK,EAAE,OAA9B;AAAuCC,IAAAA,QAAQ,EAAE;AAAjD,GAHY,EAIZ;AAAEF,IAAAA,UAAU,EAAE,SAAd;AAAyBC,IAAAA,KAAK,EAAE,SAAhC;AAA2CC,IAAAA,QAAQ,EAAE;AAArD,GAJY,CAAhB;;AAOA,WAASE,KAAT,GAAgB;AACZ,wBAEI,QAAC,WAAD;AACI,MAAA,UAAU,EAAEL,OADhB;AAEI,MAAA,OAAO,EAAEd,OAFb;AAGI,MAAA,UAAU,EAAE,IAHhB;AAII,MAAA,kBAAkB,EAAE,EAJxB;AAKI,MAAA,YAAY,EAAE,IALlB;AAMI,MAAA,kBAAkB,EAAEoB;AANxB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAYH;AAMJ;;GA9CQrB,M;;KAAAA,M;AAgDT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Badge, Input } from \"reactstrap\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\n\n\nfunction Search(){\n\n    const [rowData, setRowData] = useState([]);\n\n    useEffect(() => {\n        fetch(\"http://131.181.190.87:3000/rankings\")\n            .then(res => res.json())\n            .then(data =>\n                data.map(company => {\n                    return {\n                        year: company.year,\n                        rank: company.rank,\n                        score: company.score,\n                        country: company.country,\n                    };\n                })\n            )\n            .then(senData => setRowData(senData));\n    }, []);\n\n    const columns = [\n        { headerName: \"Year\", field: \"year\", sortable: true, filter: true },\n        { headerName: \"Rank\", field: \"rank\", sortable: true },\n        { headerName: \"Score\", field: \"score\", sortable: true },\n        { headerName: \"Country\", field: \"country\", sortable: true },\n    ];\n\n    function Table(){\n        return (\n\n            <AgGridReact\n                columnDefs={columns}\n                rowData={rowData}\n                pagination={true}\n                paginationPageSize={30}\n                rowSelection={true}\n                onRowDoubleClicked={clickHander}\n            >\n            </AgGridReact>\n        );\n    }\n\n\n\n    \n    \n}\n \nexport default Search;"]},"metadata":{},"sourceType":"module"}